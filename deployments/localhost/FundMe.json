{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotEnoughEthSent",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINUMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x5e6b3dc02decf4d6a61bc992a7aa150c1c27d7fc01c8991aa00a6fdb77ad1f5d",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1006592",
    "logsBloom": "0x
    "blockHash": "0xe349e1d714e0dde5c25a3ec4775ea5103e8999bafaef64f3827b8de102f1425d",
    "transactionHash": "0x5e6b3dc02decf4d6a61bc992a7aa150c1c27d7fc01c8991aa00a6fdb77ad1f5d",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1006592",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "79b097042d412eb4196911cad79ab101",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotEnoughEthSent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINUMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Nicholas Phang\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// Get funds from user\\n// Withdraw\\n// Set a minimum funding value in USD\\n\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\nerror FundMe__NotEnoughEthSent();\\n\\n/// @title A contract for crowd funding\\n/// @author Nicholas Phang\\n/// @dev This implements price feeds as our library\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINUMUM_USD = 50 * 10**18;\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address private immutable i_owner;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        // Want to be able to set a minimum fund amount in USD\\n        // 1. How to send ETH to this contract?\\n\\n        if (msg.value.getConversionRate(s_priceFeed) < MINUMUM_USD) {\\n            revert FundMe__NotEnoughEthSent();\\n        }\\n\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        //reset the array\\n        s_funders = new address[](0);\\n        //Withdraw funds\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        // mappings cannot be in memory\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0xae73d7072ceefe5bb8236e84256ffab60e062cc94e4bca8a3fd99080026281e8\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xf065355ec636076563c3f8631311a6a394b165d4c6303a7d4c6701b7faf50067\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200125d3803806200125d833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6110d762000186600039600081816101fe01528181610440015281816105c201526107b801526110d76000f3fe60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461012a578063b60d428814610155578063be2693f01461015f578063d7b4750c146101695761007b565b80630343fb2514610080578063116ebb2d146100bd5780633ccfd60b146100e8578063893d20e8146100ff575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a7b565b6101a6565b6040516100b49190610ac1565b60405180910390f35b3480156100c957600080fd5b506100d26101ef565b6040516100df9190610ac1565b60405180910390f35b3480156100f457600080fd5b506100fd6101fc565b005b34801561010b57600080fd5b5061011461043c565b6040516101219190610aeb565b60405180910390f35b34801561013657600080fd5b5061013f610464565b60405161014c9190610b65565b60405180910390f35b61015d61048e565b005b6101676105c0565b005b34801561017557600080fd5b50610190600480360381019061018b9190610bac565b61084e565b60405161019d9190610aeb565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610281576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561032c5760008082815481106102a6576102a5610bd9565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061032490610c37565b915050610284565b50600067ffffffffffffffff81111561034857610347610c80565b5b6040519080825280602002602001820160405280156103765781602001602082028036833780820191505090505b506000908051906020019061038c929190610971565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103b390610ce0565b60006040518083038185875af1925050503d80600081146103f0576040519150601f19603f3d011682016040523d82523d6000602084013e6103f5565b606091505b5050905080610439576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043090610d52565b60405180910390fd5b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006104cd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461089590919063ffffffff16565b1015610505576040517fc3fa6ad500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105549190610d72565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610645576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106c857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161067e575b5050505050905060005b81518110156107535760008282815181106106f0576106ef610bd9565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061074b90610c37565b9150506106d2565b50600067ffffffffffffffff81111561076f5761076e610c80565b5b60405190808252806020026020018201604052801561079d5781602001602082028036833780820191505090505b50600090805190602001906107b3929190610971565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107fa90610ce0565b60006040518083038185875af1925050503d8060008114610837576040519150601f19603f3d011682016040523d82523d6000602084013e61083c565b606091505b505090508061084a57600080fd5b5050565b600080828154811061086357610862610bd9565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108a1836108d1565b90506000670de0b6b3a764000085836108ba9190610dc8565b6108c49190610e51565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561091a57600080fd5b505afa15801561092e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109529190610f0f565b5050509150506402540be400816109699190610f8a565b915050919050565b8280548282559060005260206000209081019282156109ea579160200282015b828111156109e95782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610991565b5b5090506109f791906109fb565b5090565b5b80821115610a145760008160009055506001016109fc565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a4882610a1d565b9050919050565b610a5881610a3d565b8114610a6357600080fd5b50565b600081359050610a7581610a4f565b92915050565b600060208284031215610a9157610a90610a18565b5b6000610a9f84828501610a66565b91505092915050565b6000819050919050565b610abb81610aa8565b82525050565b6000602082019050610ad66000830184610ab2565b92915050565b610ae581610a3d565b82525050565b6000602082019050610b006000830184610adc565b92915050565b6000819050919050565b6000610b2b610b26610b2184610a1d565b610b06565b610a1d565b9050919050565b6000610b3d82610b10565b9050919050565b6000610b4f82610b32565b9050919050565b610b5f81610b44565b82525050565b6000602082019050610b7a6000830184610b56565b92915050565b610b8981610aa8565b8114610b9457600080fd5b50565b600081359050610ba681610b80565b92915050565b600060208284031215610bc257610bc1610a18565b5b6000610bd084828501610b97565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c4282610aa8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c7557610c74610c08565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cca600083610caf565b9150610cd582610cba565b600082019050919050565b6000610ceb82610cbd565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d3c600b83610cf5565b9150610d4782610d06565b602082019050919050565b60006020820190508181036000830152610d6b81610d2f565b9050919050565b6000610d7d82610aa8565b9150610d8883610aa8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610dbd57610dbc610c08565b5b828201905092915050565b6000610dd382610aa8565b9150610dde83610aa8565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e1757610e16610c08565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e5c82610aa8565b9150610e6783610aa8565b925082610e7757610e76610e22565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ea181610e82565b8114610eac57600080fd5b50565b600081519050610ebe81610e98565b92915050565b6000819050919050565b610ed781610ec4565b8114610ee257600080fd5b50565b600081519050610ef481610ece565b92915050565b600081519050610f0981610b80565b92915050565b600080600080600060a08688031215610f2b57610f2a610a18565b5b6000610f3988828901610eaf565b9550506020610f4a88828901610ee5565b9450506040610f5b88828901610efa565b9350506060610f6c88828901610efa565b9250506080610f7d88828901610eaf565b9150509295509295909350565b6000610f9582610ec4565b9150610fa083610ec4565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610fdf57610fde610c08565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561101c5761101b610c08565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561105957611058610c08565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561109657611095610c08565b5b82820290509291505056fea2646970667358221220c7222176aa03788c6a959e7c37f2269ac214d8ff9d30cd108e2f13ad23241a4064736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461012a578063b60d428814610155578063be2693f01461015f578063d7b4750c146101695761007b565b80630343fb2514610080578063116ebb2d146100bd5780633ccfd60b146100e8578063893d20e8146100ff575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a7b565b6101a6565b6040516100b49190610ac1565b60405180910390f35b3480156100c957600080fd5b506100d26101ef565b6040516100df9190610ac1565b60405180910390f35b3480156100f457600080fd5b506100fd6101fc565b005b34801561010b57600080fd5b5061011461043c565b6040516101219190610aeb565b60405180910390f35b34801561013657600080fd5b5061013f610464565b60405161014c9190610b65565b60405180910390f35b61015d61048e565b005b6101676105c0565b005b34801561017557600080fd5b50610190600480360381019061018b9190610bac565b61084e565b60405161019d9190610aeb565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610281576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561032c5760008082815481106102a6576102a5610bd9565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061032490610c37565b915050610284565b50600067ffffffffffffffff81111561034857610347610c80565b5b6040519080825280602002602001820160405280156103765781602001602082028036833780820191505090505b506000908051906020019061038c929190610971565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103b390610ce0565b60006040518083038185875af1925050503d80600081146103f0576040519150601f19603f3d011682016040523d82523d6000602084013e6103f5565b606091505b5050905080610439576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043090610d52565b60405180910390fd5b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006104cd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461089590919063ffffffff16565b1015610505576040517fc3fa6ad500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105549190610d72565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610645576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106c857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161067e575b5050505050905060005b81518110156107535760008282815181106106f0576106ef610bd9565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061074b90610c37565b9150506106d2565b50600067ffffffffffffffff81111561076f5761076e610c80565b5b60405190808252806020026020018201604052801561079d5781602001602082028036833780820191505090505b50600090805190602001906107b3929190610971565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107fa90610ce0565b60006040518083038185875af1925050503d8060008114610837576040519150601f19603f3d011682016040523d82523d6000602084013e61083c565b606091505b505090508061084a57600080fd5b5050565b600080828154811061086357610862610bd9565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108a1836108d1565b90506000670de0b6b3a764000085836108ba9190610dc8565b6108c49190610e51565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561091a57600080fd5b505afa15801561092e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109529190610f0f565b5050509150506402540be400816109699190610f8a565b915050919050565b8280548282559060005260206000209081019282156109ea579160200282015b828111156109e95782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610991565b5b5090506109f791906109fb565b5090565b5b80821115610a145760008160009055506001016109fc565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a4882610a1d565b9050919050565b610a5881610a3d565b8114610a6357600080fd5b50565b600081359050610a7581610a4f565b92915050565b600060208284031215610a9157610a90610a18565b5b6000610a9f84828501610a66565b91505092915050565b6000819050919050565b610abb81610aa8565b82525050565b6000602082019050610ad66000830184610ab2565b92915050565b610ae581610a3d565b82525050565b6000602082019050610b006000830184610adc565b92915050565b6000819050919050565b6000610b2b610b26610b2184610a1d565b610b06565b610a1d565b9050919050565b6000610b3d82610b10565b9050919050565b6000610b4f82610b32565b9050919050565b610b5f81610b44565b82525050565b6000602082019050610b7a6000830184610b56565b92915050565b610b8981610aa8565b8114610b9457600080fd5b50565b600081359050610ba681610b80565b92915050565b600060208284031215610bc257610bc1610a18565b5b6000610bd084828501610b97565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c4282610aa8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c7557610c74610c08565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cca600083610caf565b9150610cd582610cba565b600082019050919050565b6000610ceb82610cbd565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d3c600b83610cf5565b9150610d4782610d06565b602082019050919050565b60006020820190508181036000830152610d6b81610d2f565b9050919050565b6000610d7d82610aa8565b9150610d8883610aa8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610dbd57610dbc610c08565b5b828201905092915050565b6000610dd382610aa8565b9150610dde83610aa8565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e1757610e16610c08565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e5c82610aa8565b9150610e6783610aa8565b925082610e7757610e76610e22565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ea181610e82565b8114610eac57600080fd5b50565b600081519050610ebe81610e98565b92915050565b6000819050919050565b610ed781610ec4565b8114610ee257600080fd5b50565b600081519050610ef481610ece565b92915050565b600081519050610f0981610b80565b92915050565b600080600080600060a08688031215610f2b57610f2a610a18565b5b6000610f3988828901610eaf565b9550506020610f4a88828901610ee5565b9450506040610f5b88828901610efa565b9350506060610f6c88828901610efa565b9250506080610f7d88828901610eaf565b9150509295509295909350565b6000610f9582610ec4565b9150610fa083610ec4565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610fdf57610fde610c08565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561101c5761101b610c08565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561105957611058610c08565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561109657611095610c08565b5b82820290509291505056fea2646970667358221220c7222176aa03788c6a959e7c37f2269ac214d8ff9d30cd108e2f13ad23241a4064736f6c63430008080033",
  "devdoc": {
    "author": "Nicholas Phang",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 75,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}